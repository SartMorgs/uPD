library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity MEMORIA is
	 Generic(
	 			 p_DATA_WIDTH   : INTEGER := 16;        -- Número de bits dos dados. 
	 			 p_ADD_WIDTH    : INTEGER := 6         -- Número de bits dos endereços. 
	 );
    Port ( 
--			  i_CLK 	: in  STD_LOGIC;
			  i_WR 	: in  STD_LOGIC;
           i_ADDR : in  STD_LOGIC_VECTOR ((p_ADD_WIDTH-1) downto 0);
           i_DATA : in  STD_LOGIC_VECTOR ((p_DATA_WIDTH-1) downto 0);
           o_DATA : out STD_LOGIC_VECTOR ((p_DATA_WIDTH-1) downto 0)
	 );
end MEMORIA;

architecture Behavioral of MEMORIA is

	type MEM_TYPE is array(0 TO ((2**p_ADD_WIDTH)-1)) of std_logic_vector(o_DATA'range);
	signal w_MEMORIA : MEM_TYPE;
	
----------------------------------------------------------------------------------------	
begin

--		process(i_CLK)  begin
--			if falling_edge(i_CLK)  then
		process(i_WR, i_ADDR, i_DATA)
		begin
				if (i_WR = '1') then
					w_MEMORIA(conv_integer(i_ADDR)) <= i_DATA;
				end if;
							
				o_DATA <= w_MEMORIA(conv_integer(i_ADDR));
--			end if;	
		end process;

		
		
end Behavioral;
